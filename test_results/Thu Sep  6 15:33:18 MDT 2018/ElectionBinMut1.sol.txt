Using network 'development'.


[0m[0m
[0m  Contract: Election[0m
  [32m  âœ“[0m[90m initializes with two candidates[0m[33m (59ms)[0m
  [32m  âœ“[0m[90m it initializes the candidates with the correct values[0m[31m (87ms)[0m
  [32m  âœ“[0m[90m allows a voter to cast a vote[0m[31m (261ms)[0m
  [31m  1) throws an exception for invalid candiates[0m

    Events emitted during test:
    ---------------------------

    votedEvent(_candidateId: <indexed>)

    ---------------------------
  [31m  2) throws an exception for double voting[0m
  [31m  3) throws an exception for double voting[0m
    > No events were emitted


[92m [0m[32m 3 passing[0m[90m (803ms)[0m
[31m  3 failing[0m

[0m  1) Contract: Election
       throws an exception for invalid candiates:
[0m[31m     AssertionError: error message must contain revert[0m[90m
      at test/election.js:54:7
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
[0m  2) Contract: Election
       throws an exception for double voting:
[0m[31m     AssertionError: error message must contain revert[0m[90m
      at test/election.js:78:7
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m
[0m  3) Contract: Election
       throws an exception for double voting:
[0m[31m     AssertionError: error message must contain revert[0m[90m
      at test/election.js:78:7
      at <anonymous>
      at process._tickCallback (internal/process/next_tick.js:188:7)
[0m


